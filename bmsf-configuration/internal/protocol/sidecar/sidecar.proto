syntax = "proto3";

import "bk-bscp/internal/protocol/common/common.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

package sidecar;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "蓝鲸基础服务配置平台Sidecar Instance API说明文档"
        version : "2.0.0"
    };

    schemes: HTTP
    consumes: "application/json"
    produces: "application/json"
};

service Instance {
    rpc Ping(PingReq) returns (PingResp) {
        option (google.api.http) = {
          post: "/instance/v2/ping"
          body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "获取sidecar实例信息"
            summary: "获取sidecar实例信息"
        };
    }
    rpc Inject(InjectReq) returns (InjectResp) {
        option (google.api.http) = {
          post: "/instance/v2/inject"
          body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "注入实例标签信息"
            summary: "注入实例标签"
        };
    }
    rpc WatchReload(WatchReloadReq) returns (stream WatchReloadResp) {
        option (google.api.http) = {
          post: "/instance/v2/watch_reload"
          body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "订阅reload事件"
            summary: "订阅reload事件"
        };
    }
    rpc ReportReload(ReportReloadReq) returns (ReportReloadResp) {
        option (google.api.http) = {
          post: "/instance/v2/report_reload"
          body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "上报Reload信息"
            summary: "上报Reload信息"
        };
    }
}

message ModInfo {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ModInfo"
			description: "Sidecar实例中承载处理的应用模块信息"
		}
	};

    string              biz_id   = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "所属业务名称", description: "", max_length: 64}];
    string              app_id   = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "所属应用名称", description: "", max_length: 64}];
    string              cloud_id = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "区域标识", description: "", max_length: 64}];
    string              ip       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "IP", description: "", max_length: 32}];
    string              path     = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用在sidecar的配置缓存路径", description: "", max_length: 128}];
    map<string, string> labels   = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用实例labels", description: "", max_length: 1024}];
    bool                is_ready = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "该App模块是否已就绪", description: "在通常情况下，需要业务方完成注入后App才会就绪拉取配置内容，业务方需要保证注入完成使得状态为true"}];
}

message ConfigsMetadata {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ConfigsMetadata"
			description: "需要reload的配置信息描述"
		}
	};

    string name  = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置名称", description: "", max_length: 64}];
    string fpath = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置子路径", description: "", max_length: 1024}];
}


message PingReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "PingReq"
			description: "Ping请求"
			required: ["seq"]
		}
        example: { value: '{ "seq": "1"}' }
	};

    string seq = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "请求序列号", description: "调用方的请求序列号，用于指定时间内标识某次请求"}];
}

message PingResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "PingResp"
			description: "Ping响应"
			required: ["seq", "code", "message"]
		}
        example: { value: '{ "seq": "1", "code": 0, "message": "OK", "mods": [{"biz_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "app_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "cloud_id": "dc01", "ip": "127.0.0.1", "labels": {"k1": "v1", "k2": "v2"}, "path": "/data/bk-bscp/"}]}' }
	};

    string           seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "响应序列号", description: "响应序列号, 与调用方的请求序列号一致，用于指定时间内标识某次请求"}];
    common.ErrCode   code    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误码", description: ""}];
    string           message = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误描述", description: ""}];
    repeated ModInfo mods    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "实例信息", description: "成功后返回实例信息(单Sidecar可以承载处理多个App)"}];
}

message InjectReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "InjectReq"
			description: "实例标签信息注入请求"
			required: ["seq", "biz_id", "app_id", "path", "labels"]
		}
        example: { value: '{ "seq": "1", "biz_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "app_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "labels": {"k1": "v1", "k2": "v2"}}' }
	};

    string              seq    = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "请求序列号", description: "调用方的请求序列号，用于指定时间内标识某次请求"}];
    string              biz_id = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务名称", description: "", max_length: 64}];
    string              app_id = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用名称", description: "", max_length: 64}];
    string              path   = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用在sidecar的配置缓存路径", description: "", max_length: 128}];
    map<string, string> labels = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "期望注入的实例标签集合", description: "JSON序列化总长度限制为1024"}];
}

message InjectResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "InjectResp"
			description: "实例标签信息注入响应"
			required: ["seq", "code", "message"]
		}
        example: { value: '{ "seq": "1", "code": 0, "message": "OK"}' }
	};

    string         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "响应序列号", description: "响应序列号, 与调用方的请求序列号一致，用于指定时间内标识某次请求"}];
    common.ErrCode code    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误码", description: ""}];
    string         message = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误描述", description: ""}];
}

message WatchReloadReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "WatchReloadReq"
			description: "订阅Reload事件请求"
			required: ["seq", "biz_id", "app_id", "path"]
		}
        example: { value: '{ "seq": "1", "biz_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "app_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278"}' }
	};

    string seq    = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "请求序列号", description: "调用方的请求序列号，用于指定时间内标识某次请求"}];
    string biz_id = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务名称", description: "", max_length: 64}];
    string app_id = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用名称", description: "", max_length: 64}];
    string path   = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用在sidecar的配置缓存路径", description: "", max_length: 128}];
}

message WatchReloadResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "WatchReloadResp"
			description: "订阅Reload事件流式响应"
			required: ["seq", "code", "message"]
		}
        example: { value: '{ "seq": "1", "code": 0, "message": "OK", "release_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "multi_release_id": "f879a282-c7e5-11e9-9dc5-525400f99278", "release_name":"new release", "reload_type": 0, "root_path": "/data/bk-bscp", "metadatas": [{"name":"server.yaml", "fpath":"/etc"}]}' }
	};

    string                   seq              = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "响应序列号", description: "响应序列号, 与调用方的请求序列号一致，用于指定时间内标识某次请求"}];
    common.ErrCode           code             = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误码", description: ""}];
    string                   message          = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误描述", description: ""}];
    string                   release_id       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "新发布版本ID", description: "releaseid和multiReleaseid互斥存在，通常差量reload机制下只存在multiReleaseid", max_length: 64}];
    string                   multi_release_id = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "新发布版本ID(组模式)", description: "releaseid和multiReleaseid互斥存在，通常差量reload机制下只存在multiReleaseid", max_length: 64}];
    string                   release_name     = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "新发布版本名称", description: "", max_length: 64}];
    int32                    reload_type      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "reload类型", description: "0：发布更新  1：回滚  主要是用于描述事件背景"}];
    string                   root_path        = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "缓存根目录", description: "只是sidecar容器内的缓存路径，通过volums后在业务容器中位置并不一定相同"}];
    repeated ConfigsMetadata metadatas        = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "需要做reload的配置信息", description: "根据该信息到业务容器侧的volums目录中拿取指定配置数据做更新"}];
}

message ReportReloadReq {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReportReloadReq"
			description: "Reload执行上报请求"
			required: ["seq", "biz_id", "app_id", "path", "reload_time", "reload_code" "reload_msg"]
		}
        example: { value: '{ "seq": "1", "biz_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "app_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "release_id": "f879ab8f-c7e5-11e9-9dc5-525400f99278", "multi_release_id": "0b67a798-e9c1-11e9-8c23-525400f99278", "reload_time": "2019-08-29 17:18:22", "reload_code": 0, "reload_msg":"SUCCESS"}' }
	};

    string seq              = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "请求序列号", description: "调用方的请求序列号，用于指定时间内标识某次请求"}];
    string biz_id           = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务名称", description: "", max_length: 64}];
    string app_id           = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用名称", description: "", max_length: 64}];
    string path             = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用在sidecar的配置缓存路径", description: "", max_length: 128}];
    string release_id       = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "已执行生效的发布版本ID", description: "releaseid和multiReleaseid互斥存在，通常差量reload机制下只存在multiReleaseid", max_length: 64}];
    string multi_release_id = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "已执行生效的发布版本ID(组模式)", description: "releaseid和multiReleaseid互斥存在，通常差量reload机制下只存在multiReleaseid", max_length: 64}];
    string reload_time      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本Reload时间", description: "版本reload时间, 2019-08-29 17:18:22"}];
    int32  reload_code      = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Reload执行错误码", description: ""}];
    string reload_msg       = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Reload执行错误信息", description: ""}];
}

message ReportReloadResp {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReportReloadResp"
			description: "Reload执行上报响应"
			required: ["seq", "code", "message"]
		}
        example: { value: '{ "seq": "1", "code": 0, "message": "OK"}' }
	};

    string         seq     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "响应序列号", description: "响应序列号, 与调用方的请求序列号一致，用于指定时间内标识某次请求"}];
    common.ErrCode code    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误码", description: ""}];
    string         message = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "错误描述", description: ""}];
}
