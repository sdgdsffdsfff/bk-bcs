syntax = "proto3";

import "protoc-gen-swagger/options/annotations.proto";

package common;

// NOTE: 错误码规则
// 40号段 + 5位错误码共7位
// 错误码千位为模块编号，用于快速确认错误码产生来源，如4000000为APIServer错误码，
// 4001000为AuthServer错误码，4002000为模板服务错误码...
//
//                          .-- 模块错误码
//    BSCP内部模块编号 --.  |
//                       |  |
// 蓝鲸内部系统号段 --.  |  |
//                    |  |  |
//                    |  |  |
//                    4001001
//
// 注意：
//      - 特殊错误码, 4030403（未授权）, 内部保留
//      - 蓝鲸制品库代理接口返回制品库内部错误码

// ErrCode 错误码
enum ErrCode {
    // 0 成功
    E_OK = 0;
    // -1 接口超时
    E_TIMEOUT = -1;

    // 4030403 未授权
    E_NOT_AUTHORIZED = 4030403;

    // 4000000 API服务, 节点调用失败
    E_API_SYSTEM_UNKNOWN                            = 4000000;
    // 4000001 API服务, 参数校验失败
    E_API_PARAMS_INVALID                            = 4000001;

    // 4001000 AUTH服务, 节点调用失败
    E_AUTH_SYSTEM_UNKNOWN                           = 4001000;
    // 4001001 AUTH服务, 参数校验失败
    E_AUTH_PARAMS_INVALID                           = 4001001;
    // 4001002 AUTH服务, 权限校验失败
    E_AUTH_AUTHORIZE_FAILED                         = 4001002;
    // 4001003 AUTH服务, 本地模式权限失败
    E_AUTH_LOCAL_AUTHORIZE_FAILED                   = 4001003;
    // 4001004 AUTH服务, IAM模式权限失败
    E_AUTH_BKIAM_AUTHORIZE_FAILED                   = 4001004;
    // 4001005 AUTH服务, 无权限
    E_AUTH_NOT_AUTHORIZED                           = 4001005;
    // 4001006 AUTH服务, 本地模式新建策略失败
    E_AUTH_LOCAL_ADD_POLICY_FAILED                  = 4001006;
    // 4001007 AUTH服务, IAM模式新建策略失败
    E_AUTH_BKIAM_ADD_POLICY_FAILED                  = 4001007;
    // 4001008 AUTH服务, 本地模式删除策略失败
    E_AUTH_LOCAL_REM_POLICY_FAILED                  = 4001008;
    // 4001009 AUTH服务, IAM模式删除策略失败
    E_AUTH_BKIAM_REM_POLICY_FAILED                  = 4001009;

    // 4002000 模板服务, 节点调用失败
    E_TPL_SYSTEM_UNKNOWN                            = 4002000;
    // 4002001 模板服务, 参数校验失败
    E_TPL_PARAMS_INVALID                            = 4002001;
    // 4002002 模板服务, 指定目标对象不存在
    E_TPL_NOT_FOUND                                 = 4002002;
    // 4002003 模板服务, 指定目标对象已存在
    E_TPL_ALREADY_EXISTS                            = 4002003;
    // 4002004 模板服务, 插件检查失败
    E_TPL_RENDER_PLUGIN_CHECK_FAILED                = 4002004;
    // 4002005 模板服务, 无需渲染
    E_TPL_NONEED_RENDER                             = 4002005;
    // 4002006 模板服务, 不支持的引擎
    E_TPL_UNKNOWN_ENGINE_TYPE                       = 4002006;
    // 4002007 模板服务, 渲染前置检查失败
    E_TPL_RENDER_CHECK_ERROR                        = 4002007;
    // 4002008 模板服务, 渲染失败
    E_TPL_RENDER_FAILED                             = 4002008;
    // 4002009 模版服务, 模板绑定中，无法删除
    E_TPL_TPLBINDED_CANNOT_DELETE                   = 4002009;

    // 4003000 配置服务, 节点调用失败
    E_CS_SYSTEM_UNKNOWN                             = 4003000;
    // 4003001 配置服务, 参数校验失败
    E_CS_PARAMS_INVALID                             = 4003001;
    // 4003002 配置服务, 无法根据未提交确认的Commit创建配置发布版本
    E_CS_CREATE_RELEASE_WITH_UNCONFIRMED_COMMIT     = 4003002;
    // 4003003 配置服务, 该Commit已撤销，无法再进行Confirm操作
    E_CS_COMMIT_ALREADY_CANCELED                    = 4003003;
    // 4003004 配置服务, 该Commit已提交
    E_CS_COMMIT_ALREADY_CONFIRMED                   = 4003004;
    // 4003005 配置服务, 目标资源已存在无法重复创建
    E_CS_ALREADY_EXISTS                             = 4003005;
    // 4003006 配置服务, 无法回滚一个未发布的版本
    E_CS_ROLLBACK_UNPUBLISHED_RELEASE               = 4003006;
    // 4003007 配置服务, 无法发布非初始化状态的版本
    E_CS_PUBLISHED_NOT_INIT_RELEASE                 = 4003007;
    // 4003008 配置服务, 无法撤销已经发布的Release
    E_CS_RELEASE_ALREADY_PUBLISHED                  = 4003008;
    // 4003009 配置服务, 无法撤销已经回滚的Release
    E_CS_RELEASE_ALREADY_ROLLBACKED                 = 4003009;
    // 4003010 配置服务, 无法Reload未发布或未回滚的版本
    E_CS_RELOAD_UNPUBLISHED_RELEASE                 = 4003010;

    // 4004000 数据管理服务, 通用未知异常
    E_DM_SYSTEM_UNKNOWN                             = 4004000;
    // 4004001 数据管理服务, 参数校验失败
    E_DM_PARAMS_INVALID                             = 4004001;
    // 4004002 数据管理服务, 指定目标对象不存在
    E_DM_NOT_FOUND                                  = 4004002;
    // 4004003 数据管理服务, 指定目标对象已存在
    E_DM_ALREADY_EXISTS                             = 4004003;
    // 4004004 数据管理服务, 获取数据存储分片失败
    E_DM_ERR_DBSHARDING                             = 4004004;
    // 4004005 数据管理服务, 数据操作执行异常
    E_DM_DB_EXEC_ERR                                = 4004005;
    // 4004006 数据管理服务, 更新失败, 无满足限定条件的目标对象
    E_DM_DB_UPDATE_ERR                              = 4004006;
    // 4004007 数据管理服务, 更新失败, 无满足限定条件的目标对象
    E_DM_DB_ROW_AFFECTED_ERR                        = 4004007;
    // 4004008 数据管理服务, 加锁指定配置集合失败
    E_DM_CFGSET_LOCK_FAILED                         = 4004008;
    // 4004009 数据管理服务, 解锁指定配置集合失败
    E_DM_CFGSET_UNLOCK_FAILED                       = 4004009;
    // 4004010 数据管理服务, 配置版本发布失败，无满足限定条件的目标版本对象
    E_DM_PUBLISH_RELEASE_FAILED                     = 4004010;
    // 4004011 数据管理服务, 存在未完结的Commit提交，无法重新创建Commit
    E_DM_ALREADY_EXISTS_UNCONFIRMED_COMMIT          = 4004011;
    // 4004012 数据管理服务, 关联的Commit已提交或已撤销，无法对其配置实体内容再次修改
    E_DM_COMMIT_NOT_INIT_STATE                      = 4004012;
    // 4004013 数据管理服务, 无法找到指定配置版本的实际配置内如（发布策略触达范围有误或渲染规则有误）
    E_DM_RELEASE_CONTENT_NOT_FOUND                  = 4004013;

    // 4005000 GSE控制器, 节点调用失败
    E_GSE_SYSTEM_UNKNOWN                            = 4005000;
    // 4005001 GSE控制器, 参数校验失败
    E_GSE_PARAMS_INVALID                            = 4005001;
    // 4005002 BCS控制器, 配置版本发布消息解析失败
    E_GSE_MARSHAL_PUBLISHING_FAILED                 = 4005002;
    // 4005003 GSE控制器, 配置版本任务发布失败
    E_GSE_PUBLISH_RELEASE_FAILED                    = 4005003;
    // 4005004 BCS控制器, 配置版本已执行发布，请勿重复执行
    E_GSE_ALREADY_PUBLISHED                         = 4005004;
    // 4005005 BCS控制器, 配置版本已撤销，无法执行发布
    E_GSE_ALREADY_CANCELED                          = 4005005;
    // 4005006 BCS控制器, 配置版本已回滚
    E_GSE_ALREADY_ROLLBACKED                        = 4005006;

    // 4006000 会话链接服务, 节点调用失败
    E_CONNS_SYSTEM_UNKNOWN                          = 4006000;
    // 4006001 会话链接服务, 参数校验失败
    E_CONNS_PARAMS_INVALID                          = 4006001;
    // 4006002 会话链接服务, BCS sidecar接入调度失败
    E_CONNS_SCHEDULE_RES_FAILED                     = 4006002;

    // 4007000 通道服务, 节点调用失败
    E_TS_SYSTEM_UNKNOWN                             = 4007000;
    // 4007001 通道服务, 参数校验失败
    E_TS_PARAMS_INVALID                             = 4007001;
    // 4007002 通道服务, 配置版本发布失败
    E_TS_PUBLISH_RELEASE_FAILED                     = 4007002;

    // 4008000 实例服务, 节点调用失败
    E_IS_SYSTEM_UNKNOWN                             = 4008000;
    // 4008001 实例服务, 参数校验失败
    E_IS_PARAMS_INVALID                             = 4008001;
}

// ConfigType 配置类型
enum ConfigType {
    // 0 文件配置
    CT_FILE   = 0;
    // 1 KV-String
    CT_STRING = 1;
    // 2 KV-Json
    CT_JSON   = 2;
    // 3 KV-Yaml
    CT_YAML   = 3;
}

// TemplateEngineType 模板渲染引擎类型
enum TemplateEngineType {
    // 0 非模板
    TET_NONE       = 0;
    // 1 Golang内置模板引擎
    TET_GOLANG     = 1;
    // 2 Python Mako模板引擎
    TET_PYTHONMAKO = 2;
    // 3 外部模板
    TET_EXTERNAL   = 3;
}

// ConfigFileMode 配置文件类型(仅当ConfigType为0，即文件型配置时有效)
enum ConfigFileMode {
    // 0 文本文件
    CFM_TEXT     = 0;
    // 1 二进制文件
    CFM_BINARY   = 1;
    // 2 模板文件
    CFM_TEMPLATE = 2;
}

// CommonState 通用状态
enum CommonState {
    // 0 正常
    CS_VALID   = 0;
    // 1 非正常
    CS_INVALID = 1;
}

// ConfigState 配置逻辑状态
enum ConfigState {
    // 0 通用状态
    CS_NORMAL   = 0;
    // 1 已发布过版本的状态
    CS_RELEASED = 1;
}

// CommitState 改动提交状态
enum CommitState {
    // 0 初始化
    CS_INIT      = 0;
    // 1 已提交
    CS_CONFIRMED = 1;
    // 2 已撤销
    CS_CANCELED  = 2;
}

// CommitMode 提交模式
enum CommitMode {
    // 0 非模板提交模式
    CM_CONFIGS = 0;
    // 1 模板提交模式
    CM_TEMPLATE = 1;
}

// ReleaseState 发布版本状态
enum ReleaseState {
    // 0 初始化
    RS_INIT       = 0;
    // 1 已发布
    RS_PUBLISHED  = 1;
    // 2 已撤销
    RS_CANCELED   = 2;
    // 3 已回滚
    RS_ROLLBACKED = 3;
}

// AppInstanceState 应用实例状态
enum AppInstanceState {
    // 0 离线
    INSS_OFFLINE = 0;
    // 1 在线
    INSS_ONLINE  = 1;
}

// DeployType 部署环境类型
enum DeployType {
    // 0 BCS容器部署
    DT_BCS        = 0;
    // 1 GSE进程部署
    DT_GSE        = 1;
}

// SourceType 系统资源类型
enum SourceType {
    // 0 应用模块资源
    ST_APP              = 0;
    // 1 模板资源
    ST_TEMPLATE         = 1;
    // 2 模板绑定
    ST_TEMPLATE_BIND    = 2;
    // 3 模板版本
    ST_TEMPLATE_VERSION = 3;
    // 4 配置资源
    ST_CONFIG           = 4;
    // 5 提交资源
    ST_COMMIT           = 5;
    // 6 配置内容
    ST_CONTENT          = 6;
    // 7 版本资源
    ST_RELEASE          = 7;
    // 8 策略资源
    ST_STRATEGY         = 8;
    // 9 组模式提交资源
    ST_MULTI_COMMIT     = 9;
    // 10 组模式配置版本
    ST_MULTI_RELEASE    = 10;
    // 11 进程环境应用归属信息
    ST_PROC_ATTR        = 11;
    // 12 变量分组
    ST_VAR_GROUP        = 12;
    // 13 变量
    ST_VAR              = 13;
    ST_END              = 14;
}

// SourceOpType 资源操作类型
enum SourceOpType {
    // 0 创建
    SOT_CREATE   = 0;
    // 1 更新
    SOT_UPDATE   = 1;
    // 2 查询
    SOT_QUERY    = 2;
    // 3 查询列表、历史记录
    SOT_LIST     = 3;
    // 4 删除
    SOT_DELETE   = 4;
    // 5 取消
    SOT_CANCEL   = 5;
    // 6 确认提交
    SOT_CONFIRM  = 6;
    // 7 发布版本
    SOT_PUBLISH  = 7;
    // 8 回滚版本
    SOT_ROLLBACK = 8;
    // 9 Reload配置版本
    SOT_RELOAD   = 9;
    SOT_END      = 10;
}

// Endpoint 接入节点实例
message Endpoint {
    // ip 接入点IP
    string ip   = 1;
    // port 接入点端口
    int32  port = 2;
}

message ComponentHealthzInfo {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ComponentHealthzInfo"
			description: "组件健康检查信息"
		}
	};

    string component  = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组件名", description: ""}];
    bool   is_healthy = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "健康状态", description: ""}];
    string message    = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "健康信息", description: ""}];
}

message ModuleHealthzInfo {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ModuleHealthzInfo"
			description: "模块健康检查信息"
		}
	};

    string                        module     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模块名", description: ""}];
    string                        version    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模块版本", description: ""}];
    string                        build_time = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模块编译时间", description: ""}];
    string                        git_hash   = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模块代码仓库签名", description: ""}];
    bool                          is_healthy = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "健康状态", description: ""}];
    string                        message    = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "健康信息", description: ""}];
    repeated ComponentHealthzInfo components = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组件信息", description: ""}];
}

message Page {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Page"
			description: "分页设置"
		}
	};

    bool  return_total = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "是否返回数据总量", description: ""}];
    int32 start        = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "分页起始游标", description: ""}];
    int32 limit        = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "分页数据量", description: ""}];
}

message LabelsMap {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "LabelsMap"
			description: "标签策略集合"
		}
	};

    map<string, string> labels = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "标签集合", description: "复合OP|VALUE格式"}];
}

message CommitContent {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CommitContent"
			description: "配置内容元数据(附带内容提交时使用)"
		}
	};

    string content_id   = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容签名ID", description: "", max_length: 64}];
    uint32 content_size = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容大小", description: ""}];

    // 内容索引策略，用于节点索引指定版本的配置内容. 支持多个标签，每个标签之间为逻辑或关系. 格式：KV, map type / JSON KV, key为目标标签名称，value为标签规则表达式，格式为OP|VALUES,
    // OP可以为eq(默认为空也按eq处理)等于、ne不等于、gt大于、lt小于、ge大于等于、le小于等于, VALUES可以为单独的标签值或多个标签值例如1,2,3 其表示
    // IN(1,2,3)的语意. OP和VALUES之间用竖线分割. 注意：以往协议中没有OP表达式支持的情况，即为空OP按照eq等于处理.
    repeated LabelsMap labels_or = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容索引", description: "复合OP|VALUE格式"}];

    // 内容索引策略，用于节点索引指定版本的配置内容. 支持多个标签，每个标签之间为逻辑与关系. 格式：KV, map type / JSON KV, key为目标标签名称，value为标签规则表达式，格式为OP|VALUES,
    // OP可以为eq(默认为空也按eq处理)等于、ne不等于、gt大于、lt小于、ge大于等于、le小于等于, VALUES可以为单独的标签值或多个标签值例如1,2,3 其表示
    // IN(1,2,3)的语意. OP和VALUES之间用竖线分割. 注意：以往协议中没有OP表达式支持的情况，即为空OP按照eq等于处理.
    repeated LabelsMap labels_and = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容索引", description: "复合OP|VALUE格式"}];
}

message CommitMetadataWithContent {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CommitMetadataWithContent"
			description: "配置提交元数据(附带内容)"
		}
	};

    string                 cfg_id     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "目标配置ID", description: "", max_length: 64}];
    repeated CommitContent contents   = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置内容", description: "提交的配置内容，支持模板渲染下一个配置文件多份内容的场景"}];
    string                 commit_id  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置提交ID", description: "查询时返回的字段", max_length: 64}];
}

message CommitMetadata {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "CommitMetadata"
			description: "配置提交元数据"
		}
	};

    string cfg_id      = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "目标配置ID", description: "", max_length: 64}];
    int32  commit_mode = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "提交类型", description: "提交类型, 默认0: 非模板提交 1:模板提交"}];
    string commit_id   = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置提交ID", description: "查询时返回的字段", max_length: 64}];
}

message ReleaseMetadata {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReleaseMetadata"
			description: "配置版本元数据"
		}
	};

    string cfg_id     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "目标配置ID", description: "", max_length: 64}];
    string release_id = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本ID", description: "", max_length: 64}];
    string commit_id  = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置提交ID", description: "", max_length: 64}];
}

message EffectInfo {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "EffectInfo"
			description: "生效描述信息"
		}
	};

    string cfg_id     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置ID", description: "", max_length: 64}];
    string release_id = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本ID", description: "", max_length: 64}];
}

message ReloadSpec {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReloadSpec"
			description: "Reload执行描述"
		}
	};

    string               multi_release_id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式发布版本ID", description: "", max_length: 64}];
    repeated EffectInfo  info             = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "生效描述信息", description: ""}];
    bool                 rollback         = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "是否为指定版本的回滚reload操作", description: ""}];
}

message Publishing {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Publishing"
			description: "下行发布信令内容"
		}
	};

    string     biz_id      = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string     app_id      = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string     cfg_id      = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "原子配置ID", description: "", max_length: 64}];
    string     cfg_name    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置名称", description: "", max_length: 64}];
    string     cfg_fpath   = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置子路径", description: "", max_length: 1024}];
    uint64     serialno    = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本序列号", description: "", max_length: 1024}];
    string     release_id  = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本ID", description: "", max_length: 64}];
    string     strategies  = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "策略内容", description: "", max_length: 2097152}];
    ReloadSpec reload_spec = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "回滚信令描述", description: ""}];
    double     nice        = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "信令负载", description: ""}];
}

// SignallingType 下行信令类型
enum SignallingType {
    // ST_SignallingTypePublish 配置发布信令
    ST_SignallingTypePublish  = 0;

    // ST_SignallingTypeRollback 配置回滚信令
    ST_SignallingTypeRollback = 1;

    // ST_SignallingTypeReload 配置Reload信令
    ST_SignallingTypeReload   = 2;
    ST_SignallingTypeEnd      = 3;
}

message Signalling {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Signalling"
			description: "下行信令"
		}
	};

    SignallingType type       = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "下行信令类型", description: ""}];
    Publishing     publishing = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "下行信令内容", description: ""}];
}

message App {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "App"
			description: "应用"
		}
	};

    string app_id         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string name           = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用名称", description: "", max_length: 64}];
    string biz_id         = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    int32  deploy_type    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "部署环境类型", description: "环境类型， 0: BCS容器环境  1: GSE进程环境  2:GSE插件容器模式", minimum: 0, maximum: 1}];
    string creator        = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string memo           = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at     = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message TemplateBind {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "TemplateBind"
			description: "配置/模板原子绑定关系"
		}
	};

    string biz_id         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string template_id    = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模板ID", description: "", max_length: 64}];
    string app_id         = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string cfg_id         = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "原子配置ID", description: "", max_length: 64}];
    int32  state          = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string creator        = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string created_at     = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message ConfigTemplate {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ConfigTemplate"
			description: "配置模板"
		}
	};

    string template_id    = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模板ID", description: "", max_length: 64}];
    string biz_id         = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string name           = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模板名称", description: "", max_length: 64}];
    string cfg_name       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置名", description: "", max_length: 64}];
    string cfg_fpath      = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置路径", description: "", max_length: 1024}];
    int32  cfg_type       = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置类型（KV-Json、KV-XML、KV-Yaml、KV-String、文件等）", description: ""}];
    string user           = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件用户", description: "", max_length: 64}];
    string user_group     = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件用户组", description: "", max_length: 64}];
    string file_privilege = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件权限", description: "例如: 0755", max_length: 64}];
    string file_format    = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件系统格式", description: "例如: unix  windows", max_length: 64}];
    int32  file_mode      = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件类型 1:文本文件 2:二进制文件 3:模板文件", description: "", max_length: 64}];
    int32  engine_type    = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模板渲染引擎类型", description: ""}];
    string memo           = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 14 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string creator        = 15 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 16 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string created_at     = 17 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 18 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message ConfigTemplateVersion {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ConfigTemplateVersion"
			description: "配置模板版本"
		}
	};

    string version_id     = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模板版本ID", description: "", max_length: 64}];
    string biz_id         = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string template_id    = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "模板ID", description: "", max_length: 64}];
    string version_tag    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本号", description: "在通模板下唯一"}];
    string content_id     = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容签名ID", description: "", max_length: 64}];
    uint32 content_size   = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容大小", description: ""}];
    string memo           = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string creator        = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string created_at     = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message VariableGroup {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "VariableGroup"
			description: "模板变量分组"
		}
	};

    string var_group_id   = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "变量分组ID", description: "", max_length: 64}];
    string biz_id         = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string name           = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "变量分组名", description: "", max_length: 64}];
    string memo           = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string creator        = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string created_at     = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message Variable {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Variable"
			description: "模板变量"
		}
	};

    string var_id         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "变量ID", description: "", max_length: 64}];
    string biz_id         = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string var_group_id   = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "变量分组ID", description: "", max_length: 64}];
    string name           = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "变量名", description: "", max_length: 64}];
    string value          = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "变量值", description: "", max_length: 1024}];
    string memo           = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string creator        = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string created_at     = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message Config {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Config"
			description: "配置"
		}
	};

    string cfg_id         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置ID", description: "", max_length: 64}];
    string name           = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置名称", description: "", max_length: 64}];
    string fpath          = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置路径", description: "", max_length: 1024}];
    string biz_id         = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id         = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string user           = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件用户", description: "", max_length: 64}];
    string user_group     = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件用户组", description: "", max_length: 64}];
    string file_privilege = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件权限", description: "例如: 755", max_length: 64}];
    string file_format    = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件系统格式", description: "例如: unix  windows", max_length: 64}];
    int32  file_mode      = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件类型 1:文本文件 2:二进制文件 3:模板文件", description: "", max_length: 64}];
    string creator        = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string memo           = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 14 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at     = 15 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 16 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
    int32  type           = 17 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置类型（KV-Json、KV-XML、KV-Yaml、KV-String、文件等）", description: ""}];
}

message Content {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Content"
			description: "配置内容"
		}
	};

    string cfg_id         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置ID", description: "", max_length: 64}];
    string biz_id         = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id         = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string commit_id      = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "改动提交ID", description: "", max_length: 64}];
    string index          = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "索引", description: ""}];
    string content_id     = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置内容签名ID", description: "", max_length: 64}];
    uint32 content_size   = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "内容大小", description: ""}];
    string creator        = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string memo           = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state          = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at     = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message Commit {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Commit"
			description: "配置提交"
		}
	};

    string commit_id       = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "提交ID", description: "", max_length: 64}];
    string biz_id          = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id          = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string cfg_id          = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置集合ID", description: "", max_length: 64}];
    int32  commit_mode     = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "提交类型", description: "提交类型, 默认0: 非模板提交 1:模板提交"}];
    string operator        = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "操作者名称", description: "", max_length: 64}];
    string release_id      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本ID", description: "", max_length: 64}];
    string multi_commit_id = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式提交ID", description: "", max_length: 64}];
    string memo            = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state           = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 2}];
    string created_at      = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at      = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message MultiCommit {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "MultiCommit"
			description: "配置提交(组模式)"
		}
	};

    string multi_commit_id  = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式提交ID", description: "", max_length: 64}];
    string biz_id           = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id           = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string operator         = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "操作者名称", description: "", max_length: 64}];
    string multi_release_id = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式发布版本ID", description: "", max_length: 64}];
    string memo             = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state            = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 2}];
    string created_at       = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at       = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message Release {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Release"
			description: "发布版本"
		}
	};

    uint64 id               = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本序列号", description: ""}];
    string release_id       = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本ID", description: "", max_length: 64}];
    string name             = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本名称", description: "", max_length: 64}];
    string biz_id           = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id           = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string cfg_id           = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置ID", description: "", max_length: 64}];
    string cfg_name         = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置名称", description: "", max_length: 64}];
    string cfg_fpath        = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置路径", description: "", max_length: 1024}];
    string user             = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件用户", description: "", max_length: 64}];
    string user_group       = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件用户组", description: "", max_length: 64}];
    string file_privilege   = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件权限", description: "例如: 755", max_length: 64}];
    string file_format      = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件系统格式", description: "例如: unix  windows", max_length: 64}];
    int32  file_mode        = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "文件类型 1:文本文件 2:二进制文件 3:模板文件", description: "", max_length: 64}];
    string strategy_id      = 14 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略ID", description: "", max_length: 64}];
    string strategies       = 15 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略内容", description: "", max_length: 64}];
    string creator          = 16 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string commit_id        = 17 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "改动提交ID", description: "", max_length: 64}];
    string multi_release_id = 18 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式发布版本ID", description: "", max_length: 64}];
    string last_modify_by   = 19 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string memo             = 20 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state            = 21 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 2}];
    string created_at       = 22 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at       = 23 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
    int32  cfg_type         = 24 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置类型（KV-Json、KV-XML、KV-Yaml、KV-String、文件等）", description: ""}];
}

message MultiRelease {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "MultiRelease"
			description: "发布版本(组模式)"
		}
	};

    uint64 id               = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本序列号", description: ""}];
    string multi_release_id = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式发布版本ID", description: "", max_length: 64}];
    string name             = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本名称", description: "", max_length: 64}];
    string biz_id           = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id           = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string strategy_id      = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略ID", description: "", max_length: 64}];
    string strategies       = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略内容", description: "", max_length: 64}];
    string creator          = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string multi_commit_id  = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "改动提交ID(组模式)", description: "", max_length: 64}];
    string last_modify_by   = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string memo             = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注信息", description: "", max_length: 64}];
    int32  state            = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 2}];
    string created_at       = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at       = 14 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message AppInstance {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "AppInstance"
			description: "应用实例"
		}
	};

    uint64 id         = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "实例ID", description: ""}];
    string biz_id     = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id     = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string cloud_id   = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "区域标识", description: "", max_length: 64}];
    string ip         = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "IP", description: "", max_length: 32}];
    string path       = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置缓存路径", description: "", max_length: 512}];
    string labels     = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用实例labels", description: "", max_length: 1024}];
    int32  state      = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message AppInstanceRelease {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "AppInstanceRelease"
			description: "应用实例版本信息"
		}
	};

    uint64 instance_id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用实例ID", description: ""}];
    string biz_id      = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id      = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string cloud_id    = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "区域标识", description: "", max_length: 64}];
    string ip          = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "IP", description: "", max_length: 32}];
    string path        = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置缓存路径", description: "", max_length: 512}];
    string labels      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用实例labels", description: "", max_length: 1024}];
    string cfg_id      = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置ID", description: "", max_length: 64}];
    string release_id  = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本ID", description: "", max_length: 64}];
    string effect_time = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本生效时间", description: "版本生效时间, 2019-08-29 17:18:22"}];
    int32  effect_code = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "生效错误码", description: "0:生效中  1:成功  -1:失败  -2:超时 -3:离线"}];
    string effect_msg  = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "生效错误信息", description: "生效中:PENDING  成功:SUCCESS  生效超时:TIMEOUT  离线:OFFLINE"}];
    string reload_time = 13 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本reload时间", description: "版本reload时间, 2019-08-29 17:18:22"}];
    int32  reload_code = 14 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "reload错误码", description: "0:未执行  1:reload成功  2:rollback reload成功  -1:失败  -2:超时  -3:离线"}];
    string reload_msg  = 15 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "reload错误信息", description: "未执行:PENDING  reload成功:SUCCESS  rollback reload成功:ROLLBACK SUCCESS  生效超时:TIMEOUT  离线:OFFLINE"}];
    string created_at  = 16 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at  = 17 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message ReportInfo {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ReportInfo"
			description: "实例上报信息"
		}
	};

    string cfg_id           = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置ID", description: "", max_length: 64}];
    string release_id       = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布版本ID", description: "", max_length: 64}];
    string multi_release_id = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "组模式发布版本ID", description: "", max_length: 64}];
    string effect_time      = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本生效时间", description: "版本生效时间, 2019-08-29 17:18:22"}];
    int32  effect_code      = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "生效错误码", description: "0:生效中  1:成功  -1:失败  -2:超时  -3:离线"}];
    string effect_msg       = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "生效错误信息", description: "生效中:PENDING  成功:SUCCESS  生效超时:TIMEOUT  离线:OFFLINE"}];
    string reload_time      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "版本reload时间", description: "版本reload时间, 2019-08-29 17:18:22"}];
    int32  reload_code      = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "reload错误码", description: "0:未执行  1:reload成功  2:rollback reload成功  -1:失败  -2:超时  -3:离线"}];
    string reload_msg       = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "reload错误信息", description: "未执行:PENDING  reload成功:SUCCESS  rollback reload成功:ROLLBACK SUCCESS  生效超时:TIMEOUT  离线:OFFLINE"}];
}

message Strategy {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Strategy"
			description: "发布策略"
		}
	};

    string strategy_id    = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略ID", description: "", max_length: 64}];
    string biz_id         = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id         = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string name           = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略名称", description: "", max_length: 64}];
    string content        = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "发布策略内容", description: "", max_length: 2097152}];
    string creator        = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string memo           = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注", description: "", max_length: 64}];
    int32  state          = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string last_modify_by = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string created_at     = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message ProcAttr {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ProcAttr"
			description: "进程环境应用归属信息"
		}
	};

    string cloud_id       = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "进程环境子网ID", description: "", max_length: 64}];
    string ip             = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "进程环境主机IP", description: "", max_length: 32}];
    string biz_id         = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string app_id         = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用ID", description: "", max_length: 64}];
    string path           = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "配置缓存路径设置", description: "", max_length: 128}];
    string labels         = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "应用实例labels", description: "", max_length: 1024}];
    string creator        = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建者名称", description: "", max_length: 64}];
    string last_modify_by = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改者名称", description: "", max_length: 64}];
    string memo           = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注", description: "", max_length: 64}];
    int32  state          = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at     = 11 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at     = 12 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message ShardingDB {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "ShardingDB"
			description: "分片存储实例"
		}
	};

    string db_id      = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "分片数据库实例标识", description: "", max_length: 64}];
    string host       = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "数据库实例host", description: "", max_length: 64}];
    int32  port       = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "数据库实例端口", description: ""}];
    string user       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "数据库实例用户名", description: ""}];
    string password   = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "数据库实例密码", description: ""}];
    string memo       = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注", description: "", max_length: 64}];
    int32  state      = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message Sharding {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Sharding"
			description: "分片存储规则"
		}
	};

    string key        = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "分片存储规则KEY", description: "", max_length: 64}];
    string db_id      = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "分片数据库实例标识", description: "", max_length: 64}];
    string db_name    = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "分片存储MySQL database", description: "", max_length: 64}];
    string memo       = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注", description: "", max_length: 64}];
    int32  state      = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}

message Audit {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Audit"
			description: "审计信息"
		}
	};

    uint64 id          = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "审计记录唯一ID", description: "", minimum: 0}];
    int32  source_type = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "资源类型", description: "", minimum: 0}];
    int32  op_type     = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "操作类型", description: "", minimum:0}];
    string biz_id      = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "业务ID", description: "", max_length: 64}];
    string source_id   = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "资源ID", description: "", max_length: 64}];
    string operator    = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "操作人", description: "", max_length: 64}];
    string memo        = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "备注", description: "", max_length: 64}];
    int32  state       = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "状态", description: "默认0：正常", minimum: 0, maximum: 1}];
    string created_at  = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "创建时间", description: "创建时间，2019-08-29 17:18:22"}];
    string updated_at  = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "最近一次修改时间", description: "最近一次修改时间，2019-08-29 17:18:22"}];
}
