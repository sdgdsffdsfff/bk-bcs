// Code generated by protoc-gen-go.
// source: authserver.proto
// DO NOT EDIT!

/*
Package authserver is a generated protocol buffer package.

It is generated from these files:
	authserver.proto

It has these top-level messages:
	AuthMetadata
	AuthorizeReq
	AuthorizeResp
	AddPolicyReq
	AddPolicyResp
	RemovePolicyReq
	RemovePolicyResp
	HealthzReq
	HealthzResp
*/
package authserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "bk-bscp/internal/protocol/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RemovePolicyMode int32

const (
	RemovePolicyMode_RPM_SINGLE RemovePolicyMode = 0
	RemovePolicyMode_RPM_MULTI  RemovePolicyMode = 1
)

var RemovePolicyMode_name = map[int32]string{
	0: "RPM_SINGLE",
	1: "RPM_MULTI",
}
var RemovePolicyMode_value = map[string]int32{
	"RPM_SINGLE": 0,
	"RPM_MULTI":  1,
}

func (x RemovePolicyMode) String() string {
	return proto.EnumName(RemovePolicyMode_name, int32(x))
}
func (RemovePolicyMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AuthMetadata struct {
	V0 string `protobuf:"bytes,1,opt,name=v0" json:"v0,omitempty"`
	V1 string `protobuf:"bytes,2,opt,name=v1" json:"v1,omitempty"`
	V2 string `protobuf:"bytes,3,opt,name=v2" json:"v2,omitempty"`
	V3 string `protobuf:"bytes,4,opt,name=v3" json:"v3,omitempty"`
	V4 string `protobuf:"bytes,5,opt,name=v4" json:"v4,omitempty"`
	V5 string `protobuf:"bytes,6,opt,name=v5" json:"v5,omitempty"`
}

func (m *AuthMetadata) Reset()                    { *m = AuthMetadata{} }
func (m *AuthMetadata) String() string            { return proto.CompactTextString(m) }
func (*AuthMetadata) ProtoMessage()               {}
func (*AuthMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthMetadata) GetV0() string {
	if m != nil {
		return m.V0
	}
	return ""
}

func (m *AuthMetadata) GetV1() string {
	if m != nil {
		return m.V1
	}
	return ""
}

func (m *AuthMetadata) GetV2() string {
	if m != nil {
		return m.V2
	}
	return ""
}

func (m *AuthMetadata) GetV3() string {
	if m != nil {
		return m.V3
	}
	return ""
}

func (m *AuthMetadata) GetV4() string {
	if m != nil {
		return m.V4
	}
	return ""
}

func (m *AuthMetadata) GetV5() string {
	if m != nil {
		return m.V5
	}
	return ""
}

type AuthorizeReq struct {
	Seq      string        `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Metadata *AuthMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *AuthorizeReq) Reset()                    { *m = AuthorizeReq{} }
func (m *AuthorizeReq) String() string            { return proto.CompactTextString(m) }
func (*AuthorizeReq) ProtoMessage()               {}
func (*AuthorizeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthorizeReq) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *AuthorizeReq) GetMetadata() *AuthMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type AuthorizeResp struct {
	Seq     string         `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Code    common.ErrCode `protobuf:"varint,2,opt,name=code,enum=common.ErrCode" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AuthorizeResp) Reset()                    { *m = AuthorizeResp{} }
func (m *AuthorizeResp) String() string            { return proto.CompactTextString(m) }
func (*AuthorizeResp) ProtoMessage()               {}
func (*AuthorizeResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AuthorizeResp) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *AuthorizeResp) GetCode() common.ErrCode {
	if m != nil {
		return m.Code
	}
	return common.ErrCode_E_OK
}

func (m *AuthorizeResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddPolicyReq struct {
	Seq      string        `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Metadata *AuthMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *AddPolicyReq) Reset()                    { *m = AddPolicyReq{} }
func (m *AddPolicyReq) String() string            { return proto.CompactTextString(m) }
func (*AddPolicyReq) ProtoMessage()               {}
func (*AddPolicyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AddPolicyReq) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *AddPolicyReq) GetMetadata() *AuthMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type AddPolicyResp struct {
	Seq     string         `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Code    common.ErrCode `protobuf:"varint,2,opt,name=code,enum=common.ErrCode" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddPolicyResp) Reset()                    { *m = AddPolicyResp{} }
func (m *AddPolicyResp) String() string            { return proto.CompactTextString(m) }
func (*AddPolicyResp) ProtoMessage()               {}
func (*AddPolicyResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddPolicyResp) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *AddPolicyResp) GetCode() common.ErrCode {
	if m != nil {
		return m.Code
	}
	return common.ErrCode_E_OK
}

func (m *AddPolicyResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RemovePolicyReq struct {
	Seq      string        `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Metadata *AuthMetadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	Mode     int32         `protobuf:"varint,3,opt,name=mode" json:"mode,omitempty"`
}

func (m *RemovePolicyReq) Reset()                    { *m = RemovePolicyReq{} }
func (m *RemovePolicyReq) String() string            { return proto.CompactTextString(m) }
func (*RemovePolicyReq) ProtoMessage()               {}
func (*RemovePolicyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RemovePolicyReq) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *RemovePolicyReq) GetMetadata() *AuthMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *RemovePolicyReq) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type RemovePolicyResp struct {
	Seq     string         `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Code    common.ErrCode `protobuf:"varint,2,opt,name=code,enum=common.ErrCode" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RemovePolicyResp) Reset()                    { *m = RemovePolicyResp{} }
func (m *RemovePolicyResp) String() string            { return proto.CompactTextString(m) }
func (*RemovePolicyResp) ProtoMessage()               {}
func (*RemovePolicyResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RemovePolicyResp) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *RemovePolicyResp) GetCode() common.ErrCode {
	if m != nil {
		return m.Code
	}
	return common.ErrCode_E_OK
}

func (m *RemovePolicyResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HealthzReq struct {
	Seq string `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
}

func (m *HealthzReq) Reset()                    { *m = HealthzReq{} }
func (m *HealthzReq) String() string            { return proto.CompactTextString(m) }
func (*HealthzReq) ProtoMessage()               {}
func (*HealthzReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HealthzReq) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

type HealthzResp struct {
	Seq     string                    `protobuf:"bytes,1,opt,name=seq" json:"seq,omitempty"`
	Code    common.ErrCode            `protobuf:"varint,2,opt,name=code,enum=common.ErrCode" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Data    *common.ModuleHealthzInfo `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *HealthzResp) Reset()                    { *m = HealthzResp{} }
func (m *HealthzResp) String() string            { return proto.CompactTextString(m) }
func (*HealthzResp) ProtoMessage()               {}
func (*HealthzResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *HealthzResp) GetSeq() string {
	if m != nil {
		return m.Seq
	}
	return ""
}

func (m *HealthzResp) GetCode() common.ErrCode {
	if m != nil {
		return m.Code
	}
	return common.ErrCode_E_OK
}

func (m *HealthzResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HealthzResp) GetData() *common.ModuleHealthzInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthMetadata)(nil), "authserver.AuthMetadata")
	proto.RegisterType((*AuthorizeReq)(nil), "authserver.AuthorizeReq")
	proto.RegisterType((*AuthorizeResp)(nil), "authserver.AuthorizeResp")
	proto.RegisterType((*AddPolicyReq)(nil), "authserver.AddPolicyReq")
	proto.RegisterType((*AddPolicyResp)(nil), "authserver.AddPolicyResp")
	proto.RegisterType((*RemovePolicyReq)(nil), "authserver.RemovePolicyReq")
	proto.RegisterType((*RemovePolicyResp)(nil), "authserver.RemovePolicyResp")
	proto.RegisterType((*HealthzReq)(nil), "authserver.HealthzReq")
	proto.RegisterType((*HealthzResp)(nil), "authserver.HealthzResp")
	proto.RegisterEnum("authserver.RemovePolicyMode", RemovePolicyMode_name, RemovePolicyMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	Authorize(ctx context.Context, in *AuthorizeReq, opts ...grpc.CallOption) (*AuthorizeResp, error)
	AddPolicy(ctx context.Context, in *AddPolicyReq, opts ...grpc.CallOption) (*AddPolicyResp, error)
	RemovePolicy(ctx context.Context, in *RemovePolicyReq, opts ...grpc.CallOption) (*RemovePolicyResp, error)
	Healthz(ctx context.Context, in *HealthzReq, opts ...grpc.CallOption) (*HealthzResp, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Authorize(ctx context.Context, in *AuthorizeReq, opts ...grpc.CallOption) (*AuthorizeResp, error) {
	out := new(AuthorizeResp)
	err := grpc.Invoke(ctx, "/authserver.Auth/Authorize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) AddPolicy(ctx context.Context, in *AddPolicyReq, opts ...grpc.CallOption) (*AddPolicyResp, error) {
	out := new(AddPolicyResp)
	err := grpc.Invoke(ctx, "/authserver.Auth/AddPolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RemovePolicy(ctx context.Context, in *RemovePolicyReq, opts ...grpc.CallOption) (*RemovePolicyResp, error) {
	out := new(RemovePolicyResp)
	err := grpc.Invoke(ctx, "/authserver.Auth/RemovePolicy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Healthz(ctx context.Context, in *HealthzReq, opts ...grpc.CallOption) (*HealthzResp, error) {
	out := new(HealthzResp)
	err := grpc.Invoke(ctx, "/authserver.Auth/Healthz", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	Authorize(context.Context, *AuthorizeReq) (*AuthorizeResp, error)
	AddPolicy(context.Context, *AddPolicyReq) (*AddPolicyResp, error)
	RemovePolicy(context.Context, *RemovePolicyReq) (*RemovePolicyResp, error)
	Healthz(context.Context, *HealthzReq) (*HealthzResp, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authserver.Auth/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Authorize(ctx, req.(*AuthorizeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_AddPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).AddPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authserver.Auth/AddPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).AddPolicy(ctx, req.(*AddPolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RemovePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePolicyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RemovePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authserver.Auth/RemovePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RemovePolicy(ctx, req.(*RemovePolicyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Healthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthzReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Healthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authserver.Auth/Healthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Healthz(ctx, req.(*HealthzReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authserver.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _Auth_Authorize_Handler,
		},
		{
			MethodName: "AddPolicy",
			Handler:    _Auth_AddPolicy_Handler,
		},
		{
			MethodName: "RemovePolicy",
			Handler:    _Auth_RemovePolicy_Handler,
		},
		{
			MethodName: "Healthz",
			Handler:    _Auth_Healthz_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authserver.proto",
}

func init() { proto.RegisterFile("authserver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xdf, 0x8e, 0xd2, 0x40,
	0x14, 0xc6, 0x69, 0xb7, 0xbb, 0x2b, 0x67, 0x77, 0xd9, 0x66, 0x2e, 0x74, 0xb6, 0x1a, 0x63, 0xea,
	0x8d, 0x31, 0x01, 0x96, 0x02, 0x77, 0xde, 0xa8, 0x21, 0x4a, 0xa4, 0x86, 0x8c, 0x7f, 0x6e, 0xb5,
	0xb4, 0xa3, 0x10, 0xdb, 0x4e, 0x69, 0x4b, 0x13, 0x79, 0x07, 0x1f, 0xc0, 0xb7, 0x35, 0x3d, 0x4c,
	0x61, 0x40, 0xb8, 0x83, 0x2b, 0xe6, 0x37, 0x73, 0xe6, 0x3b, 0xdf, 0x39, 0x73, 0x28, 0x98, 0xde,
	0x22, 0x9f, 0x66, 0x3c, 0x2d, 0x78, 0xda, 0x4a, 0x52, 0x91, 0x0b, 0x02, 0x9b, 0x1d, 0xab, 0x39,
	0xf9, 0xd5, 0x9c, 0x64, 0x7e, 0xd2, 0x9e, 0xc5, 0x39, 0x4f, 0x63, 0x2f, 0x6c, 0x63, 0x8c, 0x2f,
	0xc2, 0xb6, 0x2f, 0xa2, 0x48, 0xc4, 0xf2, 0x67, 0x75, 0xd5, 0x8e, 0xe1, 0xfa, 0xf5, 0x22, 0x9f,
	0xba, 0x3c, 0xf7, 0x02, 0x2f, 0xf7, 0x48, 0x03, 0xf4, 0xe2, 0x9e, 0x6a, 0xcf, 0xb4, 0x17, 0x75,
	0xa6, 0x17, 0xf7, 0xc8, 0x1d, 0xaa, 0x4b, 0xee, 0x20, 0x3b, 0xf4, 0x4c, 0xb2, 0x83, 0xdc, 0xa5,
	0x86, 0xe4, 0x2e, 0x72, 0x8f, 0x9e, 0x4b, 0xee, 0x21, 0xf7, 0xe9, 0x85, 0xe4, 0xbe, 0xfd, 0x75,
	0x95, 0x4f, 0xa4, 0xb3, 0x25, 0x67, 0x7c, 0x4e, 0x4c, 0x38, 0xcb, 0xf8, 0x5c, 0x26, 0x2c, 0x97,
	0xa4, 0x07, 0x0f, 0x22, 0xe9, 0x06, 0xf3, 0x5e, 0x39, 0xb4, 0xa5, 0x54, 0xac, 0xba, 0x65, 0xeb,
	0x48, 0xfb, 0x3b, 0xdc, 0x28, 0xba, 0x59, 0xb2, 0x47, 0xf8, 0x39, 0x18, 0xbe, 0x08, 0x38, 0x8a,
	0x36, 0x9c, 0xdb, 0x96, 0xec, 0xc3, 0x20, 0x4d, 0xdf, 0x8a, 0x80, 0x33, 0x3c, 0x24, 0x14, 0x2e,
	0x23, 0x9e, 0x65, 0xde, 0x4f, 0x2e, 0x8b, 0xac, 0x10, 0x9d, 0x07, 0xc1, 0x58, 0x84, 0x33, 0xff,
	0xf7, 0xb1, 0x9d, 0x6f, 0x74, 0x4f, 0xe1, 0x3c, 0x82, 0x5b, 0xc6, 0x23, 0x51, 0xf0, 0xa3, 0x9b,
	0x27, 0x04, 0x8c, 0xa8, 0x74, 0x56, 0x66, 0x3c, 0x67, 0xb8, 0xb6, 0x7d, 0x30, 0xb7, 0xd3, 0x9d,
	0xa2, 0xa6, 0xa7, 0x00, 0xef, 0xb9, 0x17, 0xe6, 0xd3, 0xe5, 0xde, 0x72, 0xec, 0x3f, 0x1a, 0x5c,
	0xad, 0x03, 0x4e, 0x60, 0x80, 0x34, 0xc1, 0xc0, 0x5e, 0x19, 0xd8, 0xab, 0xbb, 0xea, 0xba, 0x2b,
	0x82, 0x45, 0xc8, 0x65, 0xe6, 0x61, 0xfc, 0x43, 0x30, 0x0c, 0x7b, 0xd9, 0xd9, 0x6e, 0x8a, 0x5b,
	0x8a, 0x37, 0x00, 0xd8, 0xd8, 0xfd, 0xf6, 0x69, 0xf8, 0xf1, 0xdd, 0x68, 0x60, 0xd6, 0xc8, 0x0d,
	0xd4, 0x4b, 0x76, 0xbf, 0x8c, 0x3e, 0x0f, 0x4d, 0xcd, 0xf9, 0xab, 0x83, 0x51, 0xb6, 0x9d, 0xbc,
	0x81, 0xfa, 0x7a, 0xb6, 0xc9, 0x7f, 0xaf, 0x52, 0xfd, 0x95, 0xac, 0xbb, 0x03, 0x27, 0x59, 0x62,
	0xd7, 0x50, 0xa3, 0x9a, 0xb2, 0x1d, 0x0d, 0x65, 0xa8, 0x77, 0x34, 0xd4, 0xb1, 0xb4, 0x6b, 0xe4,
	0x03, 0x5c, 0xab, 0x35, 0x90, 0xc7, 0x6a, 0xf0, 0xce, 0x84, 0x59, 0x4f, 0x0e, 0x1f, 0xa2, 0xd8,
	0x2b, 0xb8, 0x94, 0x5d, 0x22, 0x0f, 0xd5, 0xd0, 0xcd, 0xab, 0x5a, 0x8f, 0xf6, 0xee, 0x97, 0xb7,
	0x27, 0x17, 0xf8, 0xf5, 0xea, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xae, 0x24, 0x48, 0x0c,
	0x05, 0x00, 0x00,
}
